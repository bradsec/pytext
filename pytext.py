#! /usr/bin/env python3
# Generate large block ASCII art like text in the terminal using Python 3. 
# No module imports required.

def charShape(char):
    switch = {
        ' ': ["  ", "  ", "  ", "  ", "  "],
        'A': [" ######### ", "###     ###", "###########", "###     ###", "###     ###"],
        'B': ["########## ", "###     ###", "########## ", "###     ###", "########## "],
        'C': [" ##########", "###        ", "###        ", "###        ", " ##########"],
        'D': ["########## ", "###     ###", "###     ###", "###     ###", "########## "],
        'E': ["###########", "###        ", "########   ", "###        ", "###########"],
        'F': ["###########", "###        ", "########   ", "###        ", "###        "],
        'G': ["  ######## ", "###        ", "###   #####", "###     ###", " ######### "],
        'H': ["###     ###", "###     ###", "###########", "###     ###", "###     ###"],
        'I': ["###", "###", "###", "###", "###"],
        'J': ["        ###", "        ###", "        ###", "###     ###", "  #######  "],
        'K': ["###     ###", "###  ####  ", "#######    ", "###  ####  ", "###     ###"],
        'L': ["###        ", "###        ", "###        ", "###        ", "###########"],
        'M': ["###     ###", "####   ####", "###########", "### ### ###", "###     ###"],
        'N': ["#####   ###", "######  ###", "### ### ###", "###  ######", "###   #####"],
        'O': ["  #######  ", "###     ###", "###     ###", "###     ###", "  #######  "],
        'P': ["########## ", "###     ###", "########## ", "###        ", "###        "],
        'Q': ["  #######  ", "###     ###", "### ##  ###", "###  ## ###", " #### ##   "],
        'R': ["########## ", "###     ###", "########## ", "###     ###", "###     ###"],
        'S': [" ######### ", "###        ", " ######### ", "        ###", " ######### "],
        'T': ["###########", "    ###    ", "    ###    ", "    ###    ", "    ###    "],
        'U': ["###     ###", "###     ###", "###     ###", "###     ###", " ######### "],
        'V': ["###     ###", "###     ###", "###     ###", " ###   ### ", "   #####   "],
        'W': ["###     ###", "###     ###", "### ### ###", "### ### ###", " ######### "],
        'X': ["###     ###", "  ### ###  ", "    ###    ", "  ### ###  ", "###     ###"],
        'Y': ["###     ###", " ###   ### ", "   #####   ", "    ###    ", "    ###    "],
        'Z': ["###########", "      ###  ", "    ###    ", "  ###      ", "###########"],
        '0': ["  #######  ", "###   #####", "### ### ###", "####    ###", "  #######  "],
        '1': [" ###", "####", " ###", " ###", " ###"],
        '2': ["#########  ", "        ###", "  #######  ", "###        ", "###########"],
        '3': ["#########  ", "        ###", "  #######  ", "        ###", "#########  "],
        '4': ["###     ###", "###     ###", "###########", "        ###", "        ###"],
        '5': ["###########", "###        ", "###########", "        ###", "###########"],
        '6': ["  ######## ", "###        ", "########## ", "###     ###", "  ######## "],
        '7': ["###########", "        ###", "      ###  ", "    ###    ", "    ###    "],
        '8': ["  #######  ", "###     ###", "  #######  ", "###     ###", "  #######  "],
        '9': ["  #######  ", "###     ###", "  #########", "        ###", "  #######  "],
        '&': ["   #####   ", "###    ### ", "  ###### ##", "###    ### ", "  ###### ##"],
        '_': ["           ", "           ", "           ", "           ", "###########"],
        '-': ["           ", "           ", "  #######  ", "           ", "           "],
        '=': ["           ", "  #######  ", "           ", "  #######  ", "           "],
        '+': ["           ", "    ###    ", "  #######  ", "    ###    ", "           "],
        '<': ["      #### ", "    ####   ", " ####      ", "    ####   ", "      #### "],
        '>': [" ####      ", "    ####   ", "      #### ", "    ####   ", " ####      "],
        '%': [" ###  ###  ", "     ###   ", "    ###    ", "   ###     ", "  ###  ### "],
        '~': ["           ", "   ###  ###", "###  ###   ", "           ", "           "],
        '$': [" ##########", "### # #    ", " ######### ", "    # # ###", "########## "],
        '#': ["   ### ### ", " ##########", "  ### ###  ", "########## ", " ### ###   "],
        '@': [" ######### ", "### ###  ##", "### ##   ##", "###  ##### ", " ######### "],
        '*': ["       ", " # # # ", "  ###  ", " # # # ", "       "],
        '!': ["###", "###", "###", "   ", "###"],
        '?': ["######## ", "      ###", "  #####  ", "  ###    ", "  ###    "],
        '[': ["#####  ", "###    ", "###    ", "###    ", "#####  "],
        ']': ["  #####", "    ###", "    ###", "    ###", "  #####"],
        '(': [" ####  ", "###    ", "###    ", "###    ", " ####  "],
        ')': ["  #### ", "    ###", "    ###", "    ###", "  #### "],
        '{': ["  ####  ", " ###    ", "####    ", " ###    ", "  ####  "],
        '}': ["  ####  ", "    ### ", "    ####", "    ### ", "  ####  "],
        '.': ["  ", "  ", "  ", "  ", "##"],
        ',': ["    ", "    ", "    ", "### ", " ## "],
        ';': ["###", "###", "   ", "###", "## "],
        ':': ["###", "###", "   ", "###", "###"],
        '\"': ["## ##", "## ##", "     ", "     ", "     "],
        '\'': [" ##", "## ", "   ", "   ", "   "],
        '`': ["## ", " ##", "   ", "   ", "   "],
        '|': ["  ##  ", "  ##  ", "  ##  ", "  ##  ", "  ##  "],
        '^': ["   ###   ", " ### ### ", "###   ###", "         ", "         "],
        '/': ["    ###", "   ### ", "  ###  ", " ###   ", "###    "],
        '\\': ["###    ", " ###   ", "  ###  ", "   ### ", "    ###"]
    }
    return switch.get(char, ' ')


def displayText(text, symbol):
    text = text.upper()
    lines = text.split("<BR>")
    print("\n")
    for line in lines:
        for i in range(5):
            lineShape = []
            layer = ""
            for index, char in enumerate(line):
                lineShape = charShape(char)
                layer += str(lineShape[i] + " ")
                layer = layer.replace("#", symbol)
            print(layer)
        print("\n")


def main():
    # Break text lines using a <br> tag in the input text string.
    # displayText() takes two parameters the text and symbol for fill.
    # The symbol can be a standard character or unicode characters such as \u2591

    # Usage examples:

    letters = "Pack my box<br>with five<br>dozen<br>liquor jugs."
    displayText(letters, "\u2591")

    numbers = "0123456789"
    displayText(numbers, "0")

    special = "~`!@#$%^&*<br>()_-+={}[]|\<br>:;\'\"<>/?"
    displayText(special, "\u2593")

    custom = "100% $100.00<br>jack & jill<br>#python<br>\"Quote me\""
    displayText(custom, "#")

if __name__ == "__main__":
    main()
